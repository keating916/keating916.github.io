{"version":3,"sources":["assets/Patrick-KeatingIndeed.pdf","assets/etch.jpg","assets/rps.png","assets/snip.png","assets/simpsons.png","serviceWorker.js","Header.js","Nav.js","projects/reactCalc.js","projects/googReact.js","projects/etchReact.js","projects/rpsReact.js","projects/simpsonQuote.js","projects/markdownPreviewer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","id","href","target","className","map","item","Nav","resume","targer","add","x","y","Calculator","props","state","display","history","handleClick","bind","handleEquals","handleOperators","handleClear","handleBackspace","this","setState","e","last","split","value","test","length","back","pop","join","key","al","l","dis","prevState","splice","operators","all","numbers","push","parseFloat","len","ops","filter","letter","i","Number","isNaN","t","check","console","log","charAt","substr","class","type","onClick","React","Component","ReactDOM","render","document","getElementById","Goog","handleChange","evt","input","btn","q","string","open","src","onChange","placeholder","Etch","columns","color","array","handleColor","handleMouseOver","prom","prompt","newArray","parseInt","newColor","Math","floor","random","toString","style","backgroundColor","gridTemplateColumns","gridTemplateRows","border","padding","onTouchMove","onTouchStart","onMouseOver","RPS","computerScore","playerScore","textColor","message","handleReset","preventDefault","sel","ceil","pscore","cscore","compSel","playerSel","playerNum","height","name","Quote","quotation","author","tweetURL","getQuote","fetch","then","res","json","data","quote","character","parsed","event","textAlign","ht","MarkdownExample","__html","marked","sanitize","dangerouslySetInnerHTML","getMarkdownText","projectData","func","img","rps","title","description","snip","etch","simpsons","Markdown","Projects","reactRps","goog","reactCalc","reactEtch","markdown","toggleShow","b","projects","alt","Page","formRender","email","comments","handleSubmit","tail","path","port","method","keepalive","change","sub","onSubmit","htmlFor","required","form","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bb92777.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Patrick-KeatingIndeed.3be7437a.pdf\";","module.exports = __webpack_public_path__ + \"static/media/etch.fa422068.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rps.6ace7349.png\";","module.exports = __webpack_public_path__ + \"static/media/snip.e38f0157.png\";","module.exports = __webpack_public_path__ + \"static/media/simpsons.7522b297.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n\r\nfunction Header() {\r\n  const certs = [[\"Responsive Web Design\", 'FreeCodeCamp'], [\"Javascript Algorithms and Data Structures\", \"FreeCodeCamp\"], [\"SEO Fundamentals\", \"SemRush\"], [\"Technical SEO Exam\", \"SemRush\"]];\r\n  const facts = [\"I really like Programming in almost any language\", \"I learn really really fast. Like really fast\", \"I like beer\", \"I wrote this page from scratch!\", \"This is Version 2 of this page, written in React.js\"];\r\n    return (\r\n        <header id=\"welcome-section\">\r\n            <br id=\"top\" />\r\n            <h1 >Hi! I'm <givenName>Patrick</givenName> <familyName>Keating</familyName></h1>\r\n            <h2>I'm a Web Developer</h2><br />\r\n            <p>\r\n              I have been studying programming since December 2018, and I have been devouring material as fast as humanly possible. I started out with the basics of Python, as everything I read said that was the easiest to get started with. Then my current employer needed help with his website, so I dove into HTML/CSS/JS, and I haven't come back up for air!\r\n            </p>\r\n            <p>\r\n              I have completed over 600 hours of curriculum from <a href=\"https://www.freecodecamp.org\">FreeCodeCamp</a> and have loved every minute of it. I have read books on Node.Js and Express server setup, and I am simultaneously going through <a target=\"_new\" href=\"https://www.theodinproject.com/\">The Odin Project</a>.\r\n            </p>\r\n            <div id=\"header-lists\">\r\n            <h3>Current Certifications</h3>\r\n            <div id=\"cert-div\"className=\"toplistdiv\">\r\n              <ul id=\"certs\"className=\"topItems\">\r\n                {certs.map(item => {return <li>{item[0]} from {item[1]}</li>})}\r\n              </ul>\r\n            </div>\r\n            <br />\r\n            <h3>Some quick facts about me:</h3>\r\n            <div id=\"list-div\" className=\"toplistdiv\">\r\n              <ul id=\"facts\" className=\"topItems\">\r\n                {facts.map(item => {return <li>{item}</li>})}\r\n              </ul>\r\n            </div>\r\n            </div>\r\n          </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './App.css';\r\nimport resume from \"./assets/Patrick-KeatingIndeed.pdf\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav id=\"navbar\">\r\n        <ul id=\"nav\"> \r\n          <li className= \"navItem\"><a href=\"#projectDiv\">Projects</a></li>\r\n          <li className= \"navItem\"><a href=\"#formDiv\">Contact</a></li>\r\n          <li className= \"navItem\"><a href=\"#topDiv\">Top</a></li>\r\n          <li className= \"navItem navLinks\" ><a id=\"profile-link\" href=\"https://github.com/keating916/\" target=\"_blank\">Github</a></li>\r\n          <li className= \"navItem navLinks\"><a id=\"resume\" href={resume} targer=\"_blank\">Resume</a></li>\r\n          \r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nfunction add(x, y) {\r\n    return x + y\r\n  }\r\n\r\nexport default class Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            display: '0',\r\n            history: [],\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleEquals = this.handleEquals.bind(this);\r\n        this.handleOperators = this.handleOperators.bind(this);\r\n        this.handleClear = this.handleClear.bind(this);\r\n        this.handleBackspace = this.handleBackspace.bind(this);\r\n    }\r\n    \r\n    handleClear() {\r\n        this.setState({display: \"0\"})\r\n    }\r\n\r\n    handleClick(e) {\r\n        let all = /[\\*\\/\\+\\-]/\r\n        let last = this.state.display.split(all)\r\n        if(this.state.display === \"0\" && e.target.value != \".\") {\r\n            this.setState({display: e.target.value})\r\n        }else if(e.target.value == \".\" && /\\./g.test(last[last.length-1])) {\r\n            return\r\n        }else {\r\n            this.setState({\r\n                  display: this.state.display+e.target.value,\r\n                  last: this.state.display.length \r\n            })\r\n        }\r\n        \r\n    }\r\n    handleBackspace() {\r\n        let back = this.state.display.split(\"\");\r\n        back.pop();\r\n        if(back.length == 0) {\r\n            back = [\"0\"]\r\n        }\r\n        this.setState({display: back.join(\"\")})\r\n    }\r\n\r\n    handleOperators(e) {\r\n        let key = e.target.value;\r\n        let al = /[\\*\\/\\+\\-]/\r\n        let l = this.state.display.length-1;\r\n        let dis = this.state.display\r\n        if(key == \"-\") {\r\n          if(dis[l] == \"-\") {\r\n            this.setState(prevState => {\r\n                return{display: prevState}\r\n                })\r\n          }else {\r\n            this.setState({display: dis+key})\r\n          }\r\n        }else {\r\n          if(al.test(dis[l-1]) && al.test(dis[l])) {\r\n            dis = dis.split(\"\")\r\n            dis.splice(l-1,2,key)\r\n            dis = dis.join(\"\")\r\n            this.setState({display: dis})\r\n          }else if(al.test(dis[l])) {\r\n            dis = dis.split(\"\")\r\n            dis.splice(l,1,key)\r\n            dis = dis.join(\"\")\r\n            this.setState({display: dis})\r\n          }else{\r\n            this.setState({display: dis+key})\r\n          }\r\n        }\r\n    }\r\n\r\n    handleEquals() {\r\n        let operators = [ \"-\",\"*\", \"/\", \"+\"];\r\n        let all = /[\\*\\/\\+\\-]/g\r\n        let numbers = [];\r\n        let n = this.state.display.split(all)\r\n        n.map(e => numbers.push(parseFloat(e)))\r\n        let len = numbers.length-1\r\n        let ops = this.state.display.split(\"\").filter(letter => all.test(letter))\r\n        for(let i = 0; i < numbers.length; i++) {\r\n          if(Number.isNaN(numbers[i]) && i !== len) {\r\n            numbers.splice(i, 2, (0-numbers[i+1]))\r\n          }else if(Number.isNaN(numbers[i]) && i == len) {\r\n            numbers.pop();\r\n            ops.pop();\r\n          }\r\n        }\r\n        for(let x = 0; x < operators.length; x++) {\r\n          while(ops.length > 0) {\r\n                let t;\r\n                let check;\r\n                switch(ops[0]) {\r\n                    case \"-\":\r\n                        console.log(\"subract\");\r\n                        console.log(numbers, ops)\r\n                        check = 1\r\n                        numbers.splice(1, 1, (0-numbers[1]))\r\n                        ops.splice(0, 1, \"+\")\r\n                        console.log(numbers, ops)\r\n                        break;\r\n                    case \"*\":\r\n                    console.log(\"times\");\r\n                        console.log(numbers[0] * numbers[1])\r\n                        t = numbers[0] * numbers[1]\r\n                    console.log(numbers, ops)\r\n                        break; \r\n                    case \"/\":\r\n                    console.log(\"divide\");\r\n                        t = numbers[0] / numbers[1]\r\n                        break;\r\n                    case \"+\":\r\n                    console.log(\"add\");\r\n                        console.log(numbers, ops)\r\n                        console.log(add(numbers[0], numbers[1]))\r\n                        t = add(numbers[0], numbers[1])\r\n                        break;\r\n                }\r\n              if(check == 1) {\r\n                check = 0;\r\n              }else {\r\n                numbers.splice(0, 2, t);\r\n                ops.splice(0, 1);\r\n                console.log(numbers, ops)\r\n              }\r\n                \r\n          }\r\n        }\r\n        this.setState((prevState) => {\r\n            if(all.test(this.state.display.charAt(prevState.display.length-1))) {\r\n                return{\r\n                    display: `${numbers[0]}`,\r\n                    history: [...prevState.history, prevState.display.substr(0,prevState.display.length-1)+\"=\"+numbers[0]]\r\n                }\r\n            }else {\r\n                return {\r\n                    display: `${numbers[0]}`, \r\n                    history: [...prevState.history, `${this.state.display}=${numbers[0]}`]\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <body id='calcContainer' class=\"projects\">\r\n                <div id=\"calculator\">\r\n                <div className = \"row\">\r\n                    <p type = \"text\" id = \"display\" value={this.state.display}>{this.state.display}</p>\r\n                </div>\r\n                <div className = \"row\">\r\n                    <button value = \"7\" id = \"7\" className = \"input\" onClick={e => this.handleClick(e)}>7</button>\r\n                    <button value = \"8\" id = \"8\" className = \"input\" onClick={e => this.handleClick(e)}>8</button>\r\n                    <button value = \"9\" id = \"9\" className = \"input\" onClick={e => this.handleClick(e)}>9</button>\r\n                    <button value = \"/\" id = \"13\" className = \"input op\" onClick={e => this.handleOperators(e)}>/</button>\r\n                </div>\r\n                <div className = \"row\">\r\n                    <button id = \"4\" value = \"4\" className = \"input\" onClick={e => this.handleClick(e)}>4</button>\r\n                    <button id = \"5\" value = \"5\" className = \"input\" onClick={e => this.handleClick(e)}>5</button>\r\n                    <button id = \"6\" value = \"6\" className = \"input\" onClick={e => this.handleClick(e)}>6</button>\r\n                    <button value = \"*\" id = \"12\" className = \"input op\" onClick={e => this.handleOperators(e)}>*</button>\r\n                </div>\r\n                <div className = \"row\">\r\n                    <button id = \"1\" value = \"1\" className = \"input\" onClick={e => this.handleClick(e)}>1</button>\r\n                    <button id = \"2\" value = \"2\" className = \"input\" onClick={e => this.handleClick(e)}>2</button>\r\n                    <button id = \"3\" value = \"3\" className = \"input\" onClick={e => this.handleClick(e)}>3</button>\r\n                    <button value = \"-\" id = \"11\" className = \"input op\" onClick={e => this.handleOperators(e)}>-</button>\r\n                </div>\r\n                <div className = \"row\">\r\n                    <button id = \"16\" className = \"input\" onClick={this.handleClear}>Clear</button>\r\n                    <button id = \"0\" value = \"0\" className = \"input\" onClick={e => this.handleClick(e)}>0</button>\r\n                    <button value = \".\" id = \"14\" className = \"input\" onClick={e => this.handleClick(e)}>.</button>\r\n                    <button value = \"+\" id = \"10\" className = \"input op\" onClick={e => this.handleOperators(e)}>+</button>\r\n                </div>\r\n                <div className = \"row\">\r\n                    <button id = \"back\" className=\"input end\" onClick={this.handleBackspace}>Backspace</button>\r\n                    <button value = \"=\" id = \"15\" className = \"input end op\" onClick={this.handleEquals}>=</button>\r\n                </div>\r\n                <div id = \"output\">{this.state.history.map(item => {\r\n                    return <p>{item}</p>\r\n                })}</div>\r\n                </div>\r\n            </body>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<Calculator />, document.getElementById('root'))","import React from 'react'\r\n\r\nexport default class Goog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleChange(evt) {\r\n        let input = evt.target.value\r\n        this.setState({value: input})\r\n    }\r\n\r\n    handleClick(evt) {\r\n        let btn = evt.target.id;\r\n        let q = this.state.value.split(\" \").join(\"+\")\r\n        if(btn === \"search\") {\r\n            let string = `http://www.google.com/search?hl=en&q=${q}`\r\n            window.open(string, \"_blank\");\r\n        }else {\r\n            const string = `http://www.google.com/search?hl=en&q=${q}&btnI=I%27m+Feeling+Lucky&aq=f&oq=`\r\n            window.open(string, \"_blank\");\r\n        }\r\n    }\r\n    render() {\r\n        return(\r\n                <body id=\"goog\">\r\n                    <div className=\"googheader\">\r\n                        <ul id=\"gLefthead\">\r\n                            <li className=\"googleft\"><a href=\"https://about.google/intl/en/?fg=1&utm_source=google-US&utm_medium=referral&utm_campaign=hp-header\">About</a></li>\r\n                            <li className=\"googleft\"><a  href=\"https://store.google.com/?utm_source=hp_header&utm_medium=google_oo&utm_campaign=GS100042\">Store</a></li>\r\n                        </ul>\r\n                        <ul id=\"gRighthead\">\r\n                            <li className=\"googright\"><a href=\"https://mail.google.com/mail/u/0/?tab=wm\">GMail</a></li>\r\n                            <li className=\"googright\"><a href=\"https://www.google.com/imghp?hl=en&tab=wi\">Images</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div id=\"googmain\">\r\n                        <img id=\"googlogo\" src=\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"  />\r\n                        <input id=\"query\" type=\"text\" onChange={e => this.handleChange(e)} value={this.state.value} placeholder=\"Google Search\" />\r\n                    </div>\r\n                    <div id=\"googbuttons\">\r\n                        <button className=\"googsearch\" id=\"search\" onClick={this.handleClick}>Google Search</button>\r\n                        <button className=\"search\" id=\"lucky\" onClick={this.handleClick}>I'm Feeling Lucky</button>\r\n                    </div>\r\n                    <div className=\"googfooter\">\r\n                        <ul id = \"gleftfoot\">\r\n                            <li className=\"googleft\">Advertising</li>\r\n                            <li className=\"googleft\">Business</li>\r\n                        </ul>\r\n                        <ul  id=\"grightfoot\">\r\n                            <li className=\"googright\">Privacy</li>\r\n                            <li className=\"googright\">Terms</li>\r\n                            <li className=\"googright\">Settings</li>\r\n                        </ul>\r\n                    </div>\r\n                </body>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class Etch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: 4,\r\n            color: \"red\",\r\n            array: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\r\n        }\r\n        this.handleClear = this.handleClear.bind(this);\r\n        this.handleColor = this.handleColor.bind(this);\r\n        this.handleMouseOver = this.handleMouseOver.bind(this);\r\n    }\r\n\r\n    handleClear() {\r\n        let l;\r\n        const prom = (string) => {\r\n            l = prompt(string, 16);\r\n        }\r\n        let x = 0\r\n        let newArray = [];\r\n        let primary = \"How many squares across?\"\r\n        let secondary = \"Sorry has to be a number between 4 and 40\"\r\n        while(Number.isNaN(parseInt(l))  || parseInt(l) < 4 || parseInt(l) > 40) {\r\n            if(x == 0) {\r\n                x++;\r\n                prom(primary, 16)\r\n            }else{prom(secondary, 16)};\r\n        }\r\n        for(let i = 0; i < l**2; i++) {\r\n            newArray.push(i);\r\n        }\r\n        this.setState({columns: l, array: newArray})\r\n    }\r\n\r\n    handleColor() {\r\n        let newColor ='#'+Math.floor(Math.random()*16777215).toString(16);\r\n        this.setState({color: newColor})\r\n    }\r\n\r\n    handleMouseOver(evt) {\r\n        console.log(evt.target.id)\r\n        evt.target.style.backgroundColor = this.state.color\r\n    }\r\n\r\n    render() {\r\n        const divGrid = (x) => {\r\n            return(\r\n                {display: 'grid',\r\n                gridTemplateColumns: `repeat(${x}, 1fr)`,\r\n                gridTemplateRows: `repeat(${x}, 1fr)`,\r\n                border: '1px solid black',\r\n                padding: 'auto'}\r\n            )\r\n        }\r\n            \r\n        return(\r\n            <body >\r\n                <div id = \"header\">\r\n                    <div>\r\n                        <h3>Click the button to reset the drawing area</h3>\r\n                        <h3>You can also change the color!</h3>\r\n                    </div>\r\n                    <div id=\"buttonDiv\">\r\n                        <button id = \"clear\" onClick={this.handleClear}>Change Box</button>\r\n                        <button id=\"color\" onClick={this.handleColor}>Change Color</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"etchContainer\" style={divGrid(this.state.columns)}>\r\n                    {this.state.array.map(i => <div id={i} onTouchMove={e=> this.handleMouseOver(e)} onTouchStart = {e => this.handleMouseOver(e)} onMouseOver={e => this.handleMouseOver(e)} style={{backgroundColor: \"white\"}} ></div>)}</div>\r\n            </body>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class RPS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            computerScore: 0,\r\n            playerScore: 0,\r\n            textColor: 'black',\r\n            message: \"\",\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n    }\r\n\r\n    handleClick(evt) {\r\n        evt.preventDefault();\r\n        let sel = Math.ceil(Math.random() *3)\r\n        let pscore = this.state.playerScore;\r\n        let cscore = this.state.computerScore;\r\n\r\n        const compSel = sel == 1 ? \"rock\" : sel == 2 ? \"paper\" : \"scissors\";\r\n        const playerSel = evt.target.value;\r\n        console.log(`${compSel} ${playerSel}`)\r\n        if(compSel == playerSel) {\r\n            this.setState({message: `You both picked ${playerSel}`})\r\n        }else {\r\n            let playerNum = playerSel == \"rock\"? 1: playerSel == \"paper\"? 2: 3\r\n            console.log(`${sel} ${playerNum}`)\r\n            if(sel-playerNum == 1 || sel-playerNum == -2) {\r\n                if(this.state.computerScore+1 > this.state.playerScore) {\r\n                    this.setState({\r\n                        message: `${compSel} beats ${playerSel}`,\r\n                        computerScore: cscore+1,\r\n                        textColor: \"red\"\r\n                    })\r\n                }else if(this.state.computerScore+1 == this.state.playerScore) {\r\n                    this.setState({\r\n                        message: `${compSel} beats ${playerSel}`,\r\n                        computerScore: cscore+1,\r\n                        textColor: \"black\"\r\n                    })\r\n                }else {\r\n                    this.setState({\r\n                        message: `${compSel} beats ${playerSel}`,\r\n                        computerScore: cscore+1,\r\n                    })\r\n                }\r\n            } else {\r\n                if(this.state.playerScore+1 > this.state.computerScore) {\r\n                    this.setState({\r\n                        message: `${playerSel} beats ${compSel}`,\r\n                        playerScore: pscore+1,\r\n                        textColor: \"green\"\r\n                    })\r\n                }else if(this.state.playerScore+1 == this.state.computerScore) {\r\n                    this.setState({\r\n                        message: `${playerSel} beats ${compSel}`,\r\n                        playerScore: pscore+1,\r\n                        textColor: \"black\"\r\n                    })\r\n                }else {\r\n                    this.setState({\r\n                        message: `${playerSel} beats ${compSel}`,\r\n                        playerScore: pscore+1,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    handleReset() {\r\n        return\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <body class=\"function\">\r\n                <h1 >Play a game of Rock Paper, Scissors against the Computer!</h1>\r\n                <h3 id=\"score\" class=\"score\" style={{color: this.state.textColor}}>Player: {this.state.playerScore}   Computer: {this.state.computerScore}</h3>\r\n                <h3 id=\"displayMessage\" style={{height: '10px'}}>{this.state.message}</h3>\r\n                <div>\r\n                    <form id=\"selection\">\r\n                        <button name=\"input\" id=\"rock\" value=\"rock\" onClick={this.handleClick}>Rock</button>\r\n                        <button name=\"input\" id = \"paper\" value = \"paper\" onClick={this.handleClick}>Paper</button>\r\n                        <button name=\"input\" id=\"scissors\" value=\"scissors\" onClick={this.handleClick}>Scissors</button>\r\n                    </form>\r\n                </div>\r\n            </body>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Quote extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quotation: \"\",\r\n      author: \"\",\r\n      tweetURL: \"\"\r\n    }\r\n    this.getQuote = this.getQuote.bind(this);\r\n  }\r\n  \r\n  getQuote() {\r\n    fetch('https://thesimpsonsquoteapi.glitch.me/quotes')\r\n      .then(res=> res.json())\r\n      .then((data) => {\r\n      this.setState({\r\n        quotation: data[0].quote,\r\n        author: data[0].character, \r\n        tweetURL: `https://twitter.com/intent/tweet?text=${data[0].quote.split(\" \").join(\"%20\")}%0A%0A-${data[0].character.split(\" \").join(\"%20\")}`\r\n      })\r\n\r\n    })    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getQuote();\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <body id=\"simpsons\">\r\n        <h1>Random Simpsons Quotes!</h1>\r\n        <div id=\"quote-box\">\r\n          <div id=\"qa\" className=\"qa\">\r\n          <div id=\"text\">{this.state.quotation}</div>\r\n          <div id=\"author\">-{this.state.author}</div>\r\n          </div>\r\n          <div>\r\n          <button id=\"new-quote\" onClick={this.getQuote}>New Quote</button>\r\n          </div>\r\n          <a id=\"tweet-quote\" href={this.state.tweetURL} target=\"_blank\"><img id=\"twitterImg\" src=\"https://i.ya-webdesign.com/images/twitter-bird-png-2.png\" /></a>\r\n        </div>\r\n        <div><p>API Used: https://thesimpsonsquoteapi.glitch.me/</p><p>By <a href=\"https://jluboff-portfolio.glitch.me/\" target=\"_blank\">Jason Luboff</a></p></div>\r\n      </body>\r\n    \r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport marked from 'marked';\r\n\r\nexport default class Quote extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: `This is an example of Markdown\r\n==============\r\nFunction 1\r\n-----------\r\n[link to Google](http://google.com)\r\n\r\n`+\"`code is awesome`\"+`\r\n\r\n>May the force be with you\r\n\r\n>>Yoda\r\n\r\n1. **List Item 1**\r\n2. List Item 2\r\n\r\n`+`\r\n    function code() {\r\n    console.log('Hello World')\r\n    }`\r\n   \r\n    , \r\n      parsed: `This is an example of Markdown\r\n==============\r\nFunction 1\r\n-----------\r\n[link to Google](http://google.com)\r\n\r\n`+\"`code is awesome`\"+`\r\n\r\n>May the force be with you\r\n\r\n>>Yoda\r\n\r\n1. **List Item 1**\r\n2. List Item 2\r\n\r\n`+`\r\n    function code() {\r\n    console.log('Hello World')\r\n    }`\r\n   \r\n    ,\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n  handleChange(event) {\r\n    this.setState({\r\n      value: event.target.value, \r\n      parsed: event.target.value,\r\n    });\r\n  }\r\n  \r\n  \r\n  render() {\r\n    return(\r\n      <section style={{textAlign: 'center'}}>\r\n        <h1>HTML Markdown Previewer!</h1>\r\n        <div id=\"input-box\">\r\n          <textarea id='markedEditor' value={this.state.value} onChange={this.handleChange} />\r\n        </div>\r\n        <div id=\"markedContainer\">\r\n          <MarkdownExample ht={this.state.parsed} />\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n};\r\n          \r\nclass MarkdownExample extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  getMarkdownText() {\r\n    var rawMarkup = marked(this.props.ht, {sanitize: true});\r\n    return { __html: rawMarkup };\r\n  }\r\n  render() {\r\n    return <div style={{backgroundColor: 'lightgrey', textAlign: 'left'}} id='preview' dangerouslySetInnerHTML={this.getMarkdownText()} />\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nimport Header from './Header';\r\nimport Nav from './Nav';\r\n\r\nimport Calculator from './projects/reactCalc';\r\nimport Goog from './projects/googReact'\r\nimport Etch from './projects/etchReact'\r\nimport RPS from './projects/rpsReact'\r\nimport Quote from './projects/simpsonQuote'\r\nimport Markdown from './projects/markdownPreviewer'\r\n\r\nimport etch from './assets/etch.jpg';\r\nimport rps from './assets/rps.png';\r\nimport snip from './assets/snip.png';\r\nimport simpsons from './assets/simpsons.png'\r\n\r\n\r\nimport './index.css';\r\nimport './small.css';\r\nimport './tablet.css';\r\nimport './large.css';\r\n\r\n\r\nconst projectData = [\r\n  {\r\n      id: 'reactRps',\r\n      func: RPS,\r\n      img: rps,\r\n      title: \"Rock Paper Scissors\",\r\n      description: 'Text based RPS game'\r\n  },\r\n  {\r\n      id: 'goog',\r\n      func: Goog,\r\n      img: \"https://blog.hubspot.com/hubfs/image8-2.jpg\",\r\n      title: \"Google Home Page\",\r\n      description: \"Reproduction of Google's Home page\",\r\n  },\r\n  {\r\n      id: 'reactCalc',\r\n      func: Calculator,\r\n      img: snip,\r\n      title: 'Javascript Calculator',\r\n      description: \"Browser calculator using React.js\"\r\n  },\r\n  {\r\n      id: 'reactEtch',\r\n      func: Etch,\r\n      img: etch,\r\n      title: \"Etch-A-Sketch\",\r\n      description: \"Etch-A-Sketch with your mouse!\",\r\n  }, \r\n  {\r\n      id: 'quote',\r\n      func: Quote,\r\n      img: simpsons,\r\n      title: \"Simpsons Quote Generator\",\r\n      description: \"Funny Quotes pulled from an API\"\r\n  }, \r\n  {\r\n      id: 'markdown',\r\n      func: Markdown,\r\n      img: \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\r\n      title: \"Markdown Previewer\",\r\n      description: \"Github Style HTML Markdown Previewer\",\r\n  }\r\n]\r\n\r\n\r\nconst form = (render, name, email, comments, change, sub) => {\r\n    if(render) {\r\n      return(\r\n        <section id=\"contact\">\r\n              <form id=\"survey_form\" onSubmit={sub} name=\"EmailForm\">\r\n                <div>\r\n                  <label className=\"labels\" htmlFor=\"name\" id=\"name-label\">Name</label>\r\n                  <input className = \"input\" type=\"textbox\" id=\"name\" name=\"name\" placeholder=\"Enter your name\" value={name} onChange={change} required />\r\n                </div>\r\n                <div>\r\n                  <label className=\"labels\" id=\"email-label\" htmlFor=\"email\">Email</label>\r\n                  <input className = \"input\" type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your Email Address\" value={email} onChange={change} required />\r\n                </div>\r\n                <div>\r\n                  <label className=\"labels\" id=\"comments-label\" htmlFor=\"comments\">Comments?</label>\r\n                  <textarea className = \"input\" type=\"textbox\" id=\"comments\" name=\"comments\" value={comments} onChange={change} ></textarea>\r\n                </div>\r\n                <div>\r\n                  <button type=\"submit\" id=\"formSubmit\">Submit</button>\r\n                </div>\r\n              </form>\r\n            </section>\r\n      )\r\n    }else {\r\n      return(\r\n        <section id=\"contact\">\r\n            <h3>Thank you for sending, we will be in touch as soon as possible</h3>\r\n        </section>\r\n      )\r\n    }\r\n  }\r\n\r\nclass Projects extends React.Component {\r\n  constructor(props) {\r\n    super(props); \r\n    this.state ={\r\n      reactRps: false,\r\n      goog: false, \r\n      reactCalc: false,\r\n      reactEtch: false, \r\n      markdown: false,\r\n      quote: false,\r\n\r\n    }\r\n    this.toggleShow = this.toggleShow.bind(this);\r\n  }\r\n\r\n  toggleShow(evt) {\r\n    console.log(evt.target.id)\r\n    let b = this.state[evt.target.id]\r\n    console.log(b);\r\n    this.setState({[evt.target.id]: !b})\r\n    console.log(this.state)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return(\r\n          <div id=\"projects\">\r\n            {this.props.projects.map(item => \r\n              (<div><div className=\"card project-tile\" onClick={e => this.toggleShow(e)} id={item.id} style={{display: 'inline-block'}}>\r\n                <a href={item.src}>\r\n                    <img id={item.id}  src={item.img} alt={item.title} class=\"tiles-images\" />\r\n                    <div id={item.id} className=\"cardContainer\">\r\n                        <h4 id={item.id}><b id={item.id}>{item.title}</b></h4>\r\n                        <p id={item.id}>{item.description}</p>\r\n                    </div>\r\n                    \r\n                </a>\r\n              </div>\r\n              <div style={{display: this.state[item.id] === true ? 'block' : 'none'}} class=\"popup\">\r\n                <button type=\"close\" class=\"close\" id={item.id} onClick={e => this.toggleShow(e)}>X</button>\r\n                <div id=\"functionContents\">\r\n                <item.func class=\"function\" />\r\n                </div>\r\n              </div></div>\r\n              ))}\r\n          </div>\r\n        )\r\n     \r\n  }\r\n}\r\n\r\nclass Page extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formRender: true,\r\n            name: \"\",\r\n            email: \"\",\r\n            comments: \"\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        //this.renderProject = this.renderProject.bind(this);\r\n    }\r\n\r\n  handleChange(evt) {\r\n    const value = evt.target.value;\r\n    this.setState({\r\n      [evt.target.name]: value\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.setState({formRender: false})\r\n    const apiKey = \"FB4FEF0944EFF7500083DCFD8AB8EFDC8B36498212EA1BB34BD5A6531634B791BDFB466C973322B991BBFDBC17AB4061\";\r\n    const myEmail = \"keating916@gmail.com\";\r\n    const reciever = \"keatingdev25@gmail.com\";\r\n    const tail = `&subject=${this.state.name}&from=${myEmail}&replyTo=${myEmail}&to=${reciever}&bodyText=${this.state.email}%0A${this.state.comments}`\r\n    const hostname= \"http://smtp.elasticemail.com\"\r\n    let path= `/v2/email/send?apikey=${apiKey}${tail}`\r\n    const options = {\r\n      port: 2525, \r\n      method: 'POST',\r\n      keepalive: false,\r\n    }\r\n\r\n    fetch(hostname+path, options)\r\n  }\r\n    \r\n    render() {\r\n        return(\r\n            <div>\r\n                <Nav />\r\n                <div id=\"topDiv\">\r\n                  <Header />\r\n                </div>\r\n                <div id=\"projectDiv\">\r\n                  <Projects projects={projectData} />\r\n                </div>\r\n                <div id=\"formDiv\">\r\n                  {form(this.state.formRender, this.state.name, this.state.email, this.state.comments, this.handleChange, this.handleSubmit)}\r\n                </div>\r\n                \r\n                \r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\n\r\nReactDOM.render(<Page />, document.getElementById('root')); /*\r\n\r\n*/\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n//git push -f --set-upstream git@github.com:keating916/keating916.github.io.git master"],"sourceRoot":""}